// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc841.Waffle.commands;
import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc841.Waffle.C;
import org.usfirst.frc841.Waffle.Robot;

/**
 *
 */
public class DriveTowardsPeg extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public DriveTowardsPeg() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	setTimeout(3);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	double centerPoint = Robot.driveTrain.getPegPosition();
    	if (Robot.driveTrain.isElevatorPresent()){
    		//GO STRAIGHT
    		if (centerPoint < (C.centervalue + C.tolerance) & centerPoint > (C.centervalue - C.tolerance)){
    			Robot.driveTrain.SetLeftRight(0.3, -0.3);	
    		}
    		//TURN RIGHT
    		else if(centerPoint < (C.centervalue - C.tolerance)){
    			Robot.driveTrain.SetLeftRight(0, -0.4);
    		}
    		//TURN LEFT
    		else if(centerPoint > (C.centervalue + C.tolerance)){
    			Robot.driveTrain.SetLeftRight(0.4, 0);
    		}
    	}
    	else {
    		//STOP THE ROBOT
    		Robot.driveTrain.SetLeftRight(0, 0);
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return Robot.gearManipulator.isPegPresent() || isTimedOut();
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.driveTrain.SetLeftRight(0, 0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
