// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc841.Waffle.subsystems;

import org.usfirst.frc841.Waffle.RobotMap;
import org.usfirst.frc841.Waffle.commands.*;

import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class GearManipulator extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController elbow = RobotMap.gearManipulatorElbow;
    private final SpeedController roller = RobotMap.gearManipulatorRoller;
    private final DigitalInput gearSensor = RobotMap.gearManipulatorGearSensor;
    private final DigitalInput upperLimit = RobotMap.gearManipulatorUpperLimit;
    private final DigitalInput lowerLimit = RobotMap.gearManipulatorLowerLimit;
    private final DigitalInput pegSensor = RobotMap.gearManipulatorPegSensor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    	
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    	
    }
	public void setRampOut() {
		//ramp.set(true);
	}
	public void setRampIn() {
		//ramp.set(false);
	}
	public void setReleaseHold() {
		//release.set(DoubleSolenoid.Value.kReverse);
	}
	public void setReleaseOut() {
		//release.set(DoubleSolenoid.Value.kForward);
	}
	
	public void setRollerIntakeGear(){
		roller.set(0.5);
	}
	
	public void setRollerStop(){
		roller.set(0);
	}
	public void setRollerExpelGear(){
		roller.set(-0.5);
	}
	public void setElbowUp (){
		elbow.set(0.5);
	}
	public void setElbowDown(){
		elbow.set(-0.25);
	}
	public void setElbowStop(){
		elbow.set(0);
	}
	public boolean getUpperLimit(){
		return upperLimit.get();
	}
	public boolean getLowerLimit(){
		return lowerLimit.get();
	}
	public boolean isGearPresent(){
		return gearSensor.get();  //sensor must be true when gear is present to make this work.
	}

	public boolean isPegPresent(){
		return !pegSensor.get();
	}
}

